{"version":3,"sources":["webpack:///./src/app/components/ticketlist/ticketlist.component.css","webpack:///./src/app/components/ticketlist/ticketlist.component.html","webpack:///./src/app/components/ticketlist/ticketlist.component.ts","webpack:///./src/app/services/tickethandler.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+DAA+D,uK;;;;;;;;;;;ACA/D,soBAAsoB,UAAU,yBAAyB,iBAAiB,GAAG,gBAAgB,yBAAyB,cAAc,yBAAyB,YAAY,yBAAyB,8BAA8B,GAAG,2BAA2B,GAAG,+BAA+B,qEAAqE,6BAA6B,GAAG,0BAA0B,GAAG,8BAA8B,qGAAqG,cAAc,iF;;;;;;;;;;;;;;;;;;;ACAplC;AAC3B;AAC2B;AAQ/E;IAME,6BAAoB,YAAsB;QAAtB,iBAAY,GAAZ,YAAY,CAAU;QAFhC,kBAAa,GAAyB,IAAI,0DAAY,EAAE,CAAC;IAErB,CAAC;IAE/C,sCAAQ,GAAR;IACA,CAAC;IAED,wCAAU,GAAV,UAAW,MAAc;QAAzB,iBAOC;QANC,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,0FAAqB,CAAC;QAC9D,QAAQ,CAAC,iBAAiB,CAAC,MAAM,GAAG,MAAM,CAAC;QAC3C,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACpD,QAAQ,CAAC,iBAAiB,CAAC,aAAa,CAAC,SAAS,CAAC,UAAC,MAAM;YACxD,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC;IACJ,CAAC;IAhBQ;QAAR,2DAAK,EAAE;;wDAAmB;IAClB;QAAR,2DAAK,EAAE;;yDAAmB;IACjB;QAAT,4DAAM,EAAE;wEAAgB,0DAAY;8DAA8B;IAJxD,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,6HAA0C;;SAE3C,CAAC;+EAOkC,mEAAQ;OAN/B,mBAAmB,CAmB/B;IAAD,0BAAC;CAAA;AAnB+B;;;;;;;;;;;;;;;;;;;ACVW;AACO;AAOlD;IAEE,8BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,yCAAU,GAAV,UAAW,GAAW,EAAE,OAAO,EAAE,IAAI;QACnC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAW,GAAG,EAAE,EAAC,OAAO,EAAC,EAAC,aAAa,EAAE,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,EAAC,EAAC,CAAC;aAC1F,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI,IAAG,cAAO,CAAC,IAAI,CAAC,EAAb,CAAa,EAAC,UAAC,GAAG,IAAG,WAAI,CAAC,GAAG,CAAC,EAAT,CAAS,CAAC;IAC3D,CAAC;IAED,4CAAa,GAAb,UAAc,GAAW,EAAE,MAAa,EAAE,OAAO,EAAE,IAAI;QACrD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,GAAG,EACrB,EAAC,OAAO,EAAC,EAAC,aAAa,EAAE,YAAY,CAAC,OAAO,CAAC,WAAW,CAAC,EAAC;YAC5D,IAAI,EAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAC,CAAC;aAC7B,SAAS,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI,IAAG,cAAO,CAAC,IAAI,CAAC,EAAb,CAAa,EAAC,UAAC,GAAG,IAAG,WAAI,CAAC,GAAG,CAAC,EAAT,CAAS,CAAC;IAC3D,CAAC;IAdU,oBAAoB;QAHhC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,oBAAoB,CAehC;IAAD,2BAAC;CAAA;AAfgC","file":"common.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdGlja2V0bGlzdC90aWNrZXRsaXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class = \\\"container\\\">\\r\\n  <div class = \\\"list-container\\\">\\r\\n    <table class=\\\"table table-hover\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th scope=\\\"col\\\">Request ID</th>\\r\\n          <th scope=\\\"col\\\">Name</th>\\r\\n          <th scope=\\\"col\\\">Amount</th>\\r\\n          <th scope=\\\"col\\\">Type</th>\\r\\n          <th scope=\\\"col\\\">Submitted</th>\\r\\n          <th scope=\\\"col\\\">Resolved</th>\\r\\n          <th scope=\\\"col\\\">Status</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor = \\\"let ticket of tickets\\\"\\r\\n        (click) = \\\"detailView(ticket)\\\">\\r\\n          <th scope=\\\"row\\\">{{reimb.iD}}</th>\\r\\n          <td>{{reimb.firstName}} {{reimb.lastName}}</td>\\r\\n          <td>{{reimb.amount}}</td>\\r\\n          <td>{{reimb.type}}</td>\\r\\n          <td>{{reimb.submitted.getMonth()+1}}/{{reimb.submitted.getDate()}}/{{reimb.submitted.getFullYear()}}</td>\\r\\n          <td *ngIf=\\\"reimb.resolved > reimb.submitted\\\" >{{reimb.resolved.getMonth()+1}}/{{reimb.resolved.getDate()}}/{{reimb.resolved.getFullYear()}}</td>\\r\\n          <td *ngIf=\\\"reimb.resolved < reimb.submitted\\\">Unresolved</td>\\r\\n          <td>{{reimb.status}}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { NgbModal} from '@ng-bootstrap/ng-bootstrap'\r\nimport { DetailsmodalComponent } from '../detailsmodal/detailsmodal.component';\r\nimport { Ticket } from 'src/app/models/ticket';\r\n\r\n@Component({\r\n  selector: 'app-ticketlist',\r\n  templateUrl: './ticketlist.component.html',\r\n  styleUrls: ['./ticketlist.component.css']\r\n})\r\nexport class TicketlistComponent implements OnInit {\r\n\r\n  @Input() tickets: Ticket[];\r\n  @Input() employee: boolean;\r\n  @Output() resolveTicket: EventEmitter<Ticket> = new EventEmitter();\r\n\r\n  constructor(private modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  detailView(ticket: Ticket){\r\n    const modalRef = this.modalService.open(DetailsmodalComponent)\r\n    modalRef.componentInstance.ticket = ticket;\r\n    modalRef.componentInstance.employee = this.employee;\r\n    modalRef.componentInstance.resolveTicket.subscribe((ticket)=>{\r\n      this.resolveTicket.emit(ticket);\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Ticket } from '../models/ticket'\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TickethandlerService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTickets(url: string, success, fail){\r\n    this.http.post<Ticket[]>(url, {headers:{Authorization: localStorage.getItem('userToken')}})\r\n    .toPromise().then((resp)=>success(resp),(err)=>fail(err))\r\n  }\r\n\r\n  resolveTicket(url: string, ticket:Ticket, success, fail){\r\n    this.http.post<any>(url, \r\n      {headers:{Authorization: localStorage.getItem('userToken')},\r\n     body:JSON.stringify(ticket)})\r\n    .toPromise().then((resp)=>success(resp),(err)=>fail(err))\r\n  }\r\n}\r\n"],"sourceRoot":""}